# Works using docker and podman
services:
  postgres:
    image: docker.io/library/postgres:latest
    container_name: keycloak_postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: "change-for-strong-password"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kc
  keycloak:
    build:
      context: .
    container_name: production_keycloak
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: "change-for-strong-password"
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: "8080"
      # https is required for production enviroments
      KC_HOSTNAME: "https://subdomain.domain.com"
      KC_HTTP_ENABLED: "true"
      KC_PROXY_HEADERS: "forwarded"
      KC_PROXY_TRUSTED_ADDRESSES: 192.168.x.x/8
    ports:
      - "8080:8080"
    networks:
      - kc
    command: start --optimized

volumes:
  postgres_data:

networks:
  kc:
